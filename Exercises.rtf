{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf400
\cocoascreenfonts1{\fonttbl\f0\fnil\fcharset0 GillSans;\f1\fnil\fcharset0 GillSans-Light;}
{\colortbl;\red255\green255\blue255;\red52\green52\blue52;}
\paperw11900\paperh16840\margl1440\margr1440\vieww29800\viewh22740\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0\fs72 \cf2 PROBLEM SOLVING \

\fs48 \cf0 \

\f1 Lab. Problem Solving \
Prof. Pascal Bouvry\
Assistants: Patricia Ruiz\
\
Dates: 27th Nov, 4th, 11th and 18th of December 2013\
Room: A15\
Hours: 9.45 - 11.15 a.m.\

\f0 \
\

\fs72 Exercise: Solve the Minimum Makespan Scheduling Problem using a Genetic Algorithm.
\fs48 \
\
\
Task 1.
\f1  Download the source code and the instances of the MMS problem from the moodle platform.\
The algorithm provided is a simple genetic algorithm (GA) coded in java.\
Apart from the source code of the GA, the file also contains the source code of two different example problems with binary representation: PPEAKS and ONEMAX.\
\

\f0 Task 2.
\f1  Modify the source code in order to  solve the MMS problem. Remember that the individual in the GA is binary, but for MMS you must use another implementation , integer numbers.\
\
\

\f0 Task 3. 
\f1 The recombination and mutation operators provided are implemented for binary individuals. Modify them for the new model of individuals. You must be sure that after applying there operators, the resulting individual(s) are still permutation of integer numbers.\
\

\f0 Task 4.
\f1  For both PPEAKS and ONEMAX the GA tries to maximize the solution found. In the case of MMS, the maximum completion time must be minimized.\
\

\f0 \
Task 5. 
\f1 Tune the parameters, apply different crossover or even different mutation operators in order to improve the quality of the solution found.\
\
\

\f0 Task 6.
\f1  Make a report explaining the code, the changes you did in the algorithm, the operators you implemented (justifying their design) and the average of the best solutions found (after 50 independent runs of the algorithm).\
\
\
The report, along with the source code must be sent before 
\f0\fs72 22nd December 2013
\f1\fs32 \
}